// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(ReporteAppIncidenciasContext))]
    partial class ReporteAppIncidenciasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.AreaIncidencia", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_areaIncidencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Nombre_areaIncidencia")
                        .IsUnique();

                    b.ToTable("AreaIncidencias", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Arl", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_arl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id_codigo");

                    b.ToTable("Arl", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Nombre_categoria")
                        .IsUnique();

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Ciudad", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Id_departamentoFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_ciudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_departamentoFK");

                    b.HasIndex("Nombre_ciudad")
                        .IsUnique();

                    b.ToTable("Ciudades", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Id_paisFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_dep")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_paisFK");

                    b.HasIndex("Nombre_dep")
                        .IsUnique();

                    b.ToTable("Departamentos", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Direccion", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Diagonal")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Id_personaFK")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Letra")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Nro_puerta")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Tipo_residencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_personaFK");

                    b.ToTable("Direcciones", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Eps", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_eps")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id_codigo");

                    b.ToTable("Eps", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.EquipoPc", b =>
                {
                    b.Property<string>("Id_codigo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre_referenciaPc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_codigo")
                        .IsUnique();

                    b.HasIndex("Nombre_referenciaPc")
                        .IsUnique();

                    b.ToTable("EquipoPcs", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.EquipoPcRecursoHwSwPc", b =>
                {
                    b.Property<string>("Id_equipoFK")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id_recursoHwSwPcFK")
                        .HasColumnType("int");

                    b.HasKey("Id_equipoFK", "Id_recursoHwSwPcFK");

                    b.HasIndex("Id_recursoHwSwPcFK");

                    b.ToTable("EquipoPcRecursoHwSwPcs", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.EstadoIncidencia", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id_incidenciaFK")
                        .HasColumnType("int");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_incidenciaFK");

                    b.ToTable("EstadoIncidencias", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Genero", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre_genero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Nombre_genero")
                        .IsUnique();

                    b.ToTable("Generos", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Incidencia", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("Fecha_reporte")
                        .HasColumnType("datetime");

                    b.Property<int>("Id_areaIncidenciaFK")
                        .HasColumnType("int");

                    b.Property<int>("Id_categoriaFK")
                        .HasColumnType("int");

                    b.Property<string>("Id_personaFK")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Id_puestoFK")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Id_salonFK")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id_tipoNivelIncidenciaFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_incidencia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_areaIncidenciaFK");

                    b.HasIndex("Id_categoriaFK");

                    b.HasIndex("Id_personaFK");

                    b.HasIndex("Id_puestoFK");

                    b.HasIndex("Id_salonFK");

                    b.HasIndex("Id_tipoNivelIncidenciaFK");

                    b.ToTable("Incidencias", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Pais", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre_pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Nombre_pais")
                        .IsUnique();

                    b.ToTable("Paises", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Property<string>("Id_codigo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Estrato_social")
                        .HasColumnType("int(2)");

                    b.Property<int>("Id_arlFK")
                        .HasColumnType("int");

                    b.Property<int>("Id_ciudadFK")
                        .HasColumnType("int");

                    b.Property<int>("Id_epsFK")
                        .HasColumnType("int");

                    b.Property<int>("Id_generoFK")
                        .HasColumnType("int");

                    b.Property<int>("Id_tipoPersonaFK")
                        .HasColumnType("int");

                    b.Property<int>("Id_tipoSangreFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nro_documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_arlFK");

                    b.HasIndex("Id_ciudadFK");

                    b.HasIndex("Id_codigo")
                        .IsUnique();

                    b.HasIndex("Id_epsFK");

                    b.HasIndex("Id_generoFK");

                    b.HasIndex("Id_tipoPersonaFK");

                    b.HasIndex("Id_tipoSangreFK");

                    b.ToTable("Personas", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.PersonaEmail", b =>
                {
                    b.Property<string>("Id_personaFK")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id_tipoEmailFK")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id_personaFK", "Id_tipoEmailFK");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id_tipoEmailFK");

                    b.ToTable("PersonaEmails", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.PersonaTelefonoMovil", b =>
                {
                    b.Property<string>("Id_personaFK")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id_tipoTelefonoMovilFK")
                        .HasColumnType("int");

                    b.Property<string>("Numero_telefonoMovil")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id_personaFK", "Id_tipoTelefonoMovilFK");

                    b.HasIndex("Id_tipoTelefonoMovilFK");

                    b.ToTable("PersonaTelefonoMovils", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Puesto", b =>
                {
                    b.Property<string>("Id_codigo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Id_equipoFK")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Id_salonFK")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nombre_puesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_codigo")
                        .IsUnique();

                    b.HasIndex("Id_equipoFK")
                        .IsUnique();

                    b.HasIndex("Id_salonFK");

                    b.ToTable("Puestos", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.RecursoHwSwPc", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Id_categoriaFK")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre_recursoHwSwPc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_categoriaFK");

                    b.ToTable("RecursoHwSwPcs", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Salon", b =>
                {
                    b.Property<string>("Id_codigo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Capasidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Id_areaIncidenciaFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_salon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Id_areaIncidenciaFK");

                    b.HasIndex("Id_codigo")
                        .IsUnique();

                    b.ToTable("Salones", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.TipoEmail", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_tipoEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.ToTable("TipoEmails", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.TipoNivelIncidencia", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_tipoNivelIncidencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.ToTable("TipoNivelIncidencias", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.TipoPersona", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_tipoPersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Nombre_tipoPersona")
                        .IsUnique();

                    b.ToTable("TipoPersonas", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.TipoSangre", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre_tipoSangre")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.HasKey("Id_codigo");

                    b.HasIndex("Nombre_tipoSangre")
                        .IsUnique();

                    b.ToTable("TiposSangre", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.TipoTelefonoMovil", b =>
                {
                    b.Property<int>("Id_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre_tipoTelMov")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_codigo");

                    b.ToTable("TipoTelefonoMoviles", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Ciudad", b =>
                {
                    b.HasOne("Dominio.Entities.Departamento", "Departamento")
                        .WithMany("Ciudades")
                        .HasForeignKey("Id_departamentoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.HasOne("Dominio.Entities.Pais", "Pais")
                        .WithMany("Departamentos")
                        .HasForeignKey("Id_paisFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Dominio.Entities.Direccion", b =>
                {
                    b.HasOne("Dominio.Entities.Persona", "Persona")
                        .WithMany("Direcciones")
                        .HasForeignKey("Id_personaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.Entities.EquipoPcRecursoHwSwPc", b =>
                {
                    b.HasOne("Dominio.Entities.EquipoPc", "EquipoPc")
                        .WithMany("EquipoPcRecursoHwSwPcs")
                        .HasForeignKey("Id_equipoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.RecursoHwSwPc", "RecursoHwSwPc")
                        .WithMany("EquipoPcRecursoHwSwPcs")
                        .HasForeignKey("Id_recursoHwSwPcFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipoPc");

                    b.Navigation("RecursoHwSwPc");
                });

            modelBuilder.Entity("Dominio.Entities.EstadoIncidencia", b =>
                {
                    b.HasOne("Dominio.Entities.Incidencia", "Incidencia")
                        .WithMany("EstadoIncidencias")
                        .HasForeignKey("Id_incidenciaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidencia");
                });

            modelBuilder.Entity("Dominio.Entities.Incidencia", b =>
                {
                    b.HasOne("Dominio.Entities.AreaIncidencia", "AreaIncidencia")
                        .WithMany("Incidencias")
                        .HasForeignKey("Id_areaIncidenciaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Categoria", "Categoria")
                        .WithMany("Incidencias")
                        .HasForeignKey("Id_categoriaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Persona", "Persona")
                        .WithMany("Incidencias")
                        .HasForeignKey("Id_personaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Puesto", "Puesto")
                        .WithMany("Incidencias")
                        .HasForeignKey("Id_puestoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Salon", "Salon")
                        .WithMany("Incidencias")
                        .HasForeignKey("Id_salonFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.TipoNivelIncidencia", "TipoNivelIncidencia")
                        .WithMany("Incidencias")
                        .HasForeignKey("Id_tipoNivelIncidenciaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaIncidencia");

                    b.Navigation("Categoria");

                    b.Navigation("Persona");

                    b.Navigation("Puesto");

                    b.Navigation("Salon");

                    b.Navigation("TipoNivelIncidencia");
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.HasOne("Dominio.Entities.Arl", "Arl")
                        .WithMany("Personas")
                        .HasForeignKey("Id_arlFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Ciudad", "Ciudad")
                        .WithMany("Personas")
                        .HasForeignKey("Id_ciudadFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Eps", "Eps")
                        .WithMany("Personas")
                        .HasForeignKey("Id_epsFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Genero", "Genero")
                        .WithMany("Personas")
                        .HasForeignKey("Id_generoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.TipoPersona", "TipoPersona")
                        .WithMany("Personas")
                        .HasForeignKey("Id_tipoPersonaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.TipoSangre", "TipoSangre")
                        .WithMany("Personas")
                        .HasForeignKey("Id_tipoSangreFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arl");

                    b.Navigation("Ciudad");

                    b.Navigation("Eps");

                    b.Navigation("Genero");

                    b.Navigation("TipoPersona");

                    b.Navigation("TipoSangre");
                });

            modelBuilder.Entity("Dominio.Entities.PersonaEmail", b =>
                {
                    b.HasOne("Dominio.Entities.Persona", "Persona")
                        .WithMany("PersonaEmails")
                        .HasForeignKey("Id_personaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.TipoEmail", "TipoEmail")
                        .WithMany("PersonaEmails")
                        .HasForeignKey("Id_tipoEmailFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("TipoEmail");
                });

            modelBuilder.Entity("Dominio.Entities.PersonaTelefonoMovil", b =>
                {
                    b.HasOne("Dominio.Entities.Persona", "Persona")
                        .WithMany("PersonaTelefonoMoviles")
                        .HasForeignKey("Id_personaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.TipoTelefonoMovil", "TipoTelefonoMovil")
                        .WithMany("PersonaTelefonoMoviles")
                        .HasForeignKey("Id_tipoTelefonoMovilFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("TipoTelefonoMovil");
                });

            modelBuilder.Entity("Dominio.Entities.Puesto", b =>
                {
                    b.HasOne("Dominio.Entities.EquipoPc", "EquipoPc")
                        .WithOne("Puesto")
                        .HasForeignKey("Dominio.Entities.Puesto", "Id_equipoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Salon", "Salon")
                        .WithMany("Puestos")
                        .HasForeignKey("Id_salonFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipoPc");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("Dominio.Entities.RecursoHwSwPc", b =>
                {
                    b.HasOne("Dominio.Entities.Categoria", "Categoria")
                        .WithMany("RecursoHwSwPcs")
                        .HasForeignKey("Id_categoriaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Dominio.Entities.Salon", b =>
                {
                    b.HasOne("Dominio.Entities.AreaIncidencia", "AreaIncidencia")
                        .WithMany("Salones")
                        .HasForeignKey("Id_areaIncidenciaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaIncidencia");
                });

            modelBuilder.Entity("Dominio.Entities.AreaIncidencia", b =>
                {
                    b.Navigation("Incidencias");

                    b.Navigation("Salones");
                });

            modelBuilder.Entity("Dominio.Entities.Arl", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Navigation("Incidencias");

                    b.Navigation("RecursoHwSwPcs");
                });

            modelBuilder.Entity("Dominio.Entities.Ciudad", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Navigation("Ciudades");
                });

            modelBuilder.Entity("Dominio.Entities.Eps", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.EquipoPc", b =>
                {
                    b.Navigation("EquipoPcRecursoHwSwPcs");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("Dominio.Entities.Genero", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.Incidencia", b =>
                {
                    b.Navigation("EstadoIncidencias");
                });

            modelBuilder.Entity("Dominio.Entities.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Navigation("Direcciones");

                    b.Navigation("Incidencias");

                    b.Navigation("PersonaEmails");

                    b.Navigation("PersonaTelefonoMoviles");
                });

            modelBuilder.Entity("Dominio.Entities.Puesto", b =>
                {
                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Dominio.Entities.RecursoHwSwPc", b =>
                {
                    b.Navigation("EquipoPcRecursoHwSwPcs");
                });

            modelBuilder.Entity("Dominio.Entities.Salon", b =>
                {
                    b.Navigation("Incidencias");

                    b.Navigation("Puestos");
                });

            modelBuilder.Entity("Dominio.Entities.TipoEmail", b =>
                {
                    b.Navigation("PersonaEmails");
                });

            modelBuilder.Entity("Dominio.Entities.TipoNivelIncidencia", b =>
                {
                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Dominio.Entities.TipoPersona", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.TipoSangre", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.TipoTelefonoMovil", b =>
                {
                    b.Navigation("PersonaTelefonoMoviles");
                });
#pragma warning restore 612, 618
        }
    }
}
